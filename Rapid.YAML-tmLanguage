# [PackageDev] target_format: plist, ext: tmLanguage
---
name: Rapid
scopeName: source.rapid
fileTypes: [rc, rh]
uuid: cd4e6b22-a322-4771-8eef-91166b808f3d

patterns:
- include: '#comments'
- include: '#numbers'
- include: '#string'
#- include: '#struct'
- name: keyword.core.source.rapid
  match: (\b(module|alias|enum|bitmask|struct|interface|operator|attribute|unittest)\b)
- name: keyword.auto.source.rapid
  match: (\b(auto|function|delegate)\b)
- name: keyword.inheritance.source.rapid
  match: (\b(implements|override|final)\b)
- name: keyword.control.source.rapid
  match: (\b(if|else|while|do|for|foreach|switch|return|break|continue|finally)\b)
- name: keyword.memory.source.rapid
  match: (\b(new|delete)\b)
- name: keyword.modifier.source.rapid
  match: (\b(static|const)\b)
#- name: storage.modifier.rapid
#  match: (\b(public|private|protected|internal))
- name: storage.type.integer.source.rapid
  match: (\b(bool|int|int8|int16|int32|int64|int128|uint|uint8|uint16|uint32|uint64|uint128)\b)
- name: storage.type.float.source.rapid
  match: (\b(half|float|double|real|[hfd]?vec[234]|mat44|mat43)\b)
- name: storage.type.misc.source.rapid
  match: (\b(void|string)\b)
- name: constant.source.rapid
  match: (\b(true|false|nullptr)\b)

repository:

  comments:
    patterns:
    - name: comment.block.source.rapid
      begin: /\*
      captures:
        '0': {name: punctuation.definition.comment.source.rapid}
      end: \*/\n?
    - name: comment.line.source.rapid
      match: ((//).*$\n?)
      captures:
        '1': {name: punctuation.definition.comment.source.rapid}

  numbers:
    patterns:
    - name: constant.numeric.float.source.rapid
      match: ((\b|-)[0-9_]+\.[0-9_]+(e\-[0-9]+)?[hfd])
    - name: constant.numeric.integer.source.rapid
      match: ((\b|-)[0-9_]+([ul]{1,2})?\b)
    - name: constant.numeric.hex.source.rapid
      match: (\b0x[\dA-Fa-f_]+\b)
    - name: constant.numeric.binary.source.rapid
      match: (\b0b(0|1)+\b)

  struct:
    name: meta.definition.struct.source.rapid
    begin: (?x)^\s*((?:\b(?:public|private|internal|static)\b\s)*)(struct)\s+([A-Za-z_]\w+)\b
    captures:
      '1': {name: storage.modifier.source.rapid}
      '2': {name: storage.type.source.rapid}
      '3': {name: entity.name.type.class.source.rapid}
    end: (\{)
    patterns:
    - include: '#structInheritance'

  structInheritance:
    patterns:
    - begin: \b(implements)\b
      #captures:
         #'1': {name: keyword.core.source.rapid}
      end: (?={)
      patterns:
      - match: (\s*,?([A-Za-z_]\w*)\b)
        captures:
          '1': {name: storage.type.source.rapid}

  string:
    name: string.quoted.double.source.rapid
    begin: (\")
    beginCaptures:
      '0': {name: punctuation.definition.string.begin.source.rapid}
    end: (\")
    endCaptures:
      '0': {name: punctuation.definition.string.end.source.rapid}

  attribute:
    name: attribute.source.rapid
    match: (@[A-Za-z_](\([A-Za-z0-9_]+\)*))

...